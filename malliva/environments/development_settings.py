"""
Django settings for malliva project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from dbConnectionManager.tenant_connections import connect_to_database
from malliva.locale.alllanguages import LANGUAGE_OPTIONS, LANGUAGE_BIDI_OPTIONS

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# template folder
TEMPLATES_DIR = os.path.join(BASE_DIR, "templates")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ")-o_$+9*gk1!u#u-4xie!ll-5u95mdgw3as57x%c-qi3)z@%rg"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [".localhost"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework_mongoengine",
    "corsheaders",
    "storages",
    "translations",
    "mallivaUsers",
    "categories",
    "listings",
    # "customFields",
    # "marketplaceAccounts",
    # "transactions",
    # "settingsManager",
    # "mallivaEmails",
    # "communications",
    # "calendars",
    # "customCodes",
    # "orders",
    # "reviewRatings",
    # "paymentGateways",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "malliva.databaseResolver.getSubdomainMiddleware",
]

ROOT_URLCONF = "malliva.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [TEMPLATES_DIR],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "malliva.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"


# Custom settings for this project

# use big autofield for primary keys
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Default Mongo database settings
# remember to change host to database container if you're using docker

DB_USERNAME = "mallivay21"
DB_PASSWORD = "P123Malliva"
PLATFORM_DB = "malliva21_db"
PLATFORM_DB_CONN_ALIAS = "MALLIVA0000001"
PLATFORM_DB_HOST = "malliva33y21_db" #"localhost"  # 

# Setting up default database connection - To be used for the platform CRUD operations
connection1 = connect_to_database(database="malliva21_db", alias="default")
connection1.initiate_db_connection()

# Setting up marketplace database connection - To be used for the marketplace accounts CRUD operations
# make database option dynamic
connection2 = connect_to_database(
    database="malliva_marketplaces_db", alias="marketplace_dbs"
)
connection2.initiate_db_connection()

# DATABASES = {
#     "default": {},
#     "malliva_maindb": {
#         "ENGINE": "djongo",
#         "NAME": "malliva21_db",
#         "ENFORCE_SCHEMA": True,
#         "tz_aware": True,
#         "CLIENT": {
#             "host": "malliva33y21_db",
#             "port": 27017,
#             "username": "mallivay21",
#             "password": "P123Malliva",
#             "authMechanism": "SCRAM-SHA-1",
#         },
#     },
#     "audit_db": {
#         "ENGINE": "djongo",
#         "NAME": "malliva21_auditdb",
#         "ENFORCE_SCHEMA": True,
#         "tz_aware": True,
#         "CLIENT": {
#             "host": "malliva33y21_db",
#             "port": 27017,
#             "username": "mallivay21",
#             "password": "P123Malliva",
#             "authSource": "malliva21_auditdb",
#             "authMechanism": "SCRAM-SHA-1",
#         },
#     },
# }

# close database connection after every request

CONN_MAX_AGE = 0

# Database router
# DATABASE_ROUTERS = ["malliva.marketplaceRouter.MallivaDatabaseRouter"]

# AUTH_USER_MODEL = "mallivaUsers.User"

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# CORS_ALLOWED_ORIGIN_REGEXES = [
#     r"^https://\w+\.example\.com$",
# ]

# CORS_ALLOWED_ORIGINS = [
#     "https://example.com",
#     "https://sub.example.com",
#     "http://localhost:8080",
#     "http://127.0.0.1:9000",
# ]

MALLIVA_DOMAIN = "localhost:8000"
MALLIVA_SUB = "help"
MALLIVA_DEFAULT_DB = "malliva21_db"

MEDIA_ROOT = os.path.join(BASE_DIR, "media")

MEDIA_URL = "/media/"

DEFAULT_FROM_EMAIL = "administrator@malliva.com"
EMAIL_HOST = ""
EMAIL_HOST_PASSWORD = ""
EMAIL_HOST_USER = ""
EMAIL_PORT = 25
EMAIL_USE_TLS = False

EMAIL_SUBJECT_PREFIX = "Malliva"

SERVER_EMAIL = "platform@malliva.com"

ADMINS = [("John", "john@malliva.com"), ("Mary", "mary@malliva.com")]

# Amazon S3 configurations

AWS_ACCESS_KEY_ID = "AKIAIT2Z5TDYPX3ARJBA"
AWS_SECRET_ACCESS_KEY = "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"
AWS_STORAGE_BUCKET_NAME = "sibtc-static"
AWS_S3_CUSTOM_DOMAIN = "%s.s3.amazonaws.com" % AWS_STORAGE_BUCKET_NAME
AWS_S3_OBJECT_PARAMETERS = {
    "CacheControl": "max-age=86400",
}
AWS_LOCATION = "static"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
# STATIC_URL = "https://%s/%s/" % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
# STATICFILES_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"

# DEFAULT_FILE_STORAGE = 'malliva.storage_backends.MediaStorage'  # <-- here is where we reference it

# AWS_PRIVATE_MEDIA_LOCATION = "media/private"
# PRIVATE_FILE_STORAGE = "mysite.storage_backends.PrivateMediaStorage"

# language settings

# location of translation files
LOCALE_DIR = os.path.join(BASE_DIR, "malliva", "locale")
LOCALE_PATHS = [LOCALE_DIR]


LANGUAGES = LANGUAGE_OPTIONS
LANGUAGES_BIDI = LANGUAGE_BIDI_OPTIONS

# REST_FRAMEWORK = {"DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema"}


# "facebook_connect_id",
# "facebook_connect_secret",
# "google_analytics_key",
# "google_maps_key",
# "recaptcha_site_key",
# "recaptcha_secret_key"

# fixtures

FIXTURE_DIRS = [
    os.path.join(BASE_DIR, "fixtures"),
]
