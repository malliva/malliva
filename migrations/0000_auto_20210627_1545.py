from mongoengine_migrate.actions import *
import pymongo

# Existing data processing policy
# Possible values are: strict, relaxed
policy = "strict"

# Names of migrations which the current one is dependent by
dependencies = [
]

# Action chain
actions = [
    CreateDocument('User', collection='user', inherit=True),
    CreateDocument('Role', collection='role'),
    CreateDocument('Permission', collection='permission'),
    CreateDocument('User->MarketplaceUser', collection='user', inherit=True),
    CreateField('User', 'first_name', choices=None, db_field='first_name', default=None,
        max_length=200, min_length=None, null=False, primary_key=False, regex=None,
        required=False, sparse=False, type_key='StringField', unique=False, unique_with=None),
    CreateField('User', 'terms_of_service_accepted', choices=None,
        db_field='terms_of_service_accepted', default=False, null=False, primary_key=False,
        required=False, sparse=False, type_key='BooleanField', unique=False, unique_with=None),
    CreateField('User', 'is_superuser', choices=None, db_field='is_superuser',
        default=False, null=False, primary_key=False, required=False, sparse=False,
        type_key='BooleanField', unique=False, unique_with=None),
    CreateField('User', 'username', choices=None, db_field='username', default=None,
        max_length=200, min_length=None, null=False, primary_key=False, regex=None,
        required=False, sparse=False, type_key='StringField', unique=True, unique_with=None),
    CreateField('User', 'is_active', choices=None, db_field='is_active', default=True,
        null=False, primary_key=False, required=False, sparse=False, type_key='BooleanField',
        unique=False, unique_with=None),
    CreateField('User', '_cls', choices=None, db_field='_cls', default=None,
        max_length=None, min_length=None, null=False, primary_key=False, regex=None,
        required=False, sparse=False, type_key='StringField', unique=False, unique_with=None),
    CreateField('User', 'profile_picture', choices=None, db_field='profile_picture',
        default=None, max_length=None, min_length=None, null=False, primary_key=False,
        regex=None, required=False, sparse=False, type_key='StringField', unique=False,
        unique_with=None),
    CreateField('User', 'created_at', choices=None, db_field='created_at', default=None,
        null=False, primary_key=False, required=False, sparse=False, type_key='DateTimeField',
        unique=False, unique_with=None),
    CreateField('User', 'updated_at', choices=None, db_field='updated_at', default=None,
        null=False, primary_key=False, required=False, sparse=False, type_key='DateTimeField',
        unique=False, unique_with=None),
    CreateField('User', 'is_deleted', choices=None, db_field='is_deleted', default=False,
        null=False, primary_key=False, required=False, sparse=False, type_key='BooleanField',
        unique=False, unique_with=None),
    CreateField('User', 'password', choices=None, db_field='password', default=None,
        max_length=200, min_length=None, null=False, primary_key=False, regex=None,
        required=False, sparse=False, type_key='StringField', unique=False, unique_with=None),
    CreateField('User', 'last_name', choices=None, db_field='last_name', default=None,
        max_length=200, min_length=None, null=False, primary_key=False, regex=None,
        required=False, sparse=False, type_key='StringField', unique=False, unique_with=None),
    CreateField('User', 'email', allow_ip_domain=False, allow_utf8_user=False, choices=None,
        db_field='email', default=None, domain_whitelist=[], max_length=200, min_length=None,
        null=False, primary_key=False, regex=None, required=False, sparse=False,
        type_key='EmailField', unique=True, unique_with=None),
    CreateField('Role', 'name', choices=None, db_field='name', default=None, max_length=200,
        min_length=None, null=False, primary_key=False, regex=None, required=False,
        sparse=False, type_key='StringField', unique=False, unique_with=None),
    CreateField('Role', 'permissions', choices=None, db_field='permissions', dbref=False,
        default=None, null=False, primary_key=False, required=False, sparse=False,
        target_doctype='Permission', type_key='ReferenceField', unique=False, unique_with=None),
    CreateField('Permission', 'name', choices=None, db_field='name', default=None,
        max_length=200, min_length=None, null=False, primary_key=False, regex=None,
        required=False, sparse=False, type_key='StringField', unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', 'first_name', choices=None, db_field='first_name',
        default=None, max_length=200, min_length=None, null=False, primary_key=False,
        regex=None, required=False, sparse=False, type_key='StringField', unique=False,
        unique_with=None),
    CreateField('User->MarketplaceUser', 'terms_of_service_accepted', choices=None,
        db_field='terms_of_service_accepted', default=False, null=False, primary_key=False,
        required=False, sparse=False, type_key='BooleanField', unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', 'is_superuser', choices=None,
        db_field='is_superuser', default=False, null=False, primary_key=False, required=False,
        sparse=False, type_key='BooleanField', unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', 'username', choices=None, db_field='username',
        default=None, max_length=200, min_length=None, null=False, primary_key=False,
        regex=None, required=False, sparse=False, type_key='StringField', unique=True,
        unique_with=None),
    CreateField('User->MarketplaceUser', 'is_active', choices=None, db_field='is_active',
        default=True, null=False, primary_key=False, required=False, sparse=False,
        type_key='BooleanField', unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', '_cls', choices=None, db_field='_cls',
        default=None, max_length=None, min_length=None, null=False, primary_key=False,
        regex=None, required=False, sparse=False, type_key='StringField', unique=False,
        unique_with=None),
    CreateField('User->MarketplaceUser', 'profile_picture', choices=None,
        db_field='profile_picture', default=None, max_length=None, min_length=None, null=False,
        primary_key=False, regex=None, required=False, sparse=False, type_key='StringField',
        unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', 'created_at', choices=None, db_field='created_at',
        default=None, null=False, primary_key=False, required=False, sparse=False,
        type_key='DateTimeField', unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', 'updated_at', choices=None, db_field='updated_at',
        default=None, null=False, primary_key=False, required=False, sparse=False,
        type_key='DateTimeField', unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', 'is_deleted', choices=None, db_field='is_deleted',
        default=False, null=False, primary_key=False, required=False, sparse=False,
        type_key='BooleanField', unique=False, unique_with=None),
    CreateField('User->MarketplaceUser', 'password', choices=None, db_field='password',
        default=None, max_length=200, min_length=None, null=False, primary_key=False,
        regex=None, required=False, sparse=False, type_key='StringField', unique=False,
        unique_with=None),
    CreateField('User->MarketplaceUser', 'last_name', choices=None, db_field='last_name',
        default=None, max_length=200, min_length=None, null=False, primary_key=False,
        regex=None, required=False, sparse=False, type_key='StringField', unique=False,
        unique_with=None),
    CreateField('User->MarketplaceUser', 'email', allow_ip_domain=False,
        allow_utf8_user=False, choices=None, db_field='email', default=None,
        domain_whitelist=[], max_length=200, min_length=None, null=False, primary_key=False,
        regex=None, required=False, sparse=False, type_key='EmailField', unique=True,
        unique_with=None),
    CreateIndex('User', 'email_1', fields=[('email', pymongo.ASCENDING)], sparse=False,
        unique=True),
    CreateIndex('User', '_cls', fields=[('_cls', pymongo.ASCENDING)]),
    CreateIndex('User', 'username_1', fields=[('username', pymongo.ASCENDING)],
        sparse=False, unique=True),
    CreateIndex('User->MarketplaceUser', 'email_1', fields=[('email', pymongo.ASCENDING)],
        sparse=False, unique=True),
    CreateIndex('User->MarketplaceUser', '_cls', fields=[('_cls', pymongo.ASCENDING)]),
    CreateIndex('User->MarketplaceUser', 'username_1', fields=[('username',
        pymongo.ASCENDING)], sparse=False, unique=True),
]